require 'autotest'
require 'autotest/fsevent'
require 'autotest/growl'

ERROR   = "~/.rvm/gems/ruby-1.8.7-p302/gems/autotest-growl-0.2.4/img/ruby/error.png"
FAILED  = "~/.rvm/gems/ruby-1.8.7-p302/gems/autotest-growl-0.2.4/img/ruby/failed.png"
INFO    = "~/.rvm/gems/ruby-1.8.7-p302/gems/autotest-growl-0.2.4/img/ruby/info.png"
PASSED  = "~/.rvm/gems/ruby-1.8.7-p302/gems/autotest-growl-0.2.4/img/ruby/passed.png"
PENDING = "~/.rvm/gems/ruby-1.8.7-p302/gems/autotest-growl-0.2.4/img/ruby/pending.png"

#module Autotest::Growl
#  def self.growl(title, msg, img, pri=0, stick="")
#    system "growlnotify -n autotest --image #{img} -p #{pri} -m #{msg.inspect} #{title} #{stick}"
#  end
# 
#  Autotest.add_hook :initialize do |autotest|
#    %w{.git .svn .hg .DS_Store ._* vendor}.each {|exception| autotest.add_exception(exception) }
#    false
#  end
#
#  Autotest.add_hook :ran_command do |autotest|
#    results = [autotest.results].flatten.join("\n")    
#    output = results.slice(/(\d+)\s+tests?,\s*(\d+)\s+assertions?,\s*(\d+)\s+failures?,\s*(\d+)\s+errors?/)
#    
#    #61 tests, 84 assertions, 0 failures, 0 errors
#    
#    if output =~ /([1-9]\d*)\s*(errors?|failed)/
#      growl("DOH!", "#{output}", ERROR, 3)
#    elsif output =~ /([1-9]\d*)\s*(failures?|skipped)/
#      growl("WELL?", "#{output}", FAILED, 3)
#    else
#      growl("Ok!", "#{output}", PASSED)
#    end
#  end
#  
# Autotest.add_hook :ran_command do |autotest|
#   results = [autotest.results].flatten.join("\n")    
#   # Cucumber: 14 steps (2 failed, 3 skipped, 9 passed)
#
#   output = results.slice(/(\d+)\s+steps?\s*\((\d+)\s+failed,\s*(\d+)\s+skipped,\s*(\d+)\s+passed\)/)
#
#   if output =~ /([1-9]\d*)\s*failed/
#     growl("DOH!", "#{output}", ERROR, 3)
#   elsif output =~ /([1-9]\d*)\s*skipped/
#     growl("WELL?", "#{output}", FAILED, 3)
#   else
#     growl("Ok!", "#{output}", PASSED)
#   end
# end
#nd

